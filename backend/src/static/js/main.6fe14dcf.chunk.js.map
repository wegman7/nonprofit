{"version":3,"sources":["components/OrganizationProfiles.js","containers/OrganizationProfileListView.js","components/HelperProfiles.js","containers/HelperProfileListView.js","components/OrganizationProfile.js","containers/OrganizationProfileDetailView.js","components/UpdateProfileForm.js","containers/UpdateProfile.js","components/HelperProfile.js","containers/HelperProfileDetailView.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","routes.js","components/CustomNavbar.js","containers/CustomLayout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["IconText","icon","text","React","createElement","style","marginRight","OrganizationProfiles","props","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","profiles","footer","renderItem","item","Item","key","username","actions","StarOutlined","LikeOutlined","MessageOutlined","className","city","state","Meta","avatar","src","title","to","id","organization_name","description","type_of_help_needed","organization_info","OrganizationProfileList","getInitialState","bind","grabFromAPI","organization_profiles","helper_profiles","this","token","axios","get","headers","Authorization","then","response","setState","data","filter","is_organization","require","isEqual","Component","connect","isAuthenticated","HelperProfiles","extra","width","alt","first_name","last_name","area_of_expertise","cause_of_interest","HelperProfileList","OrganizationProfile","profile","is_my_profile","OrganizationProfileDetail","my_profile","profileID","match","params","prevProps","_","Object","keys","length","pk","user","history","push","UpdateProfileForm","my_form","added_is_organization","onSubmit","handleSubmit","type","name","checked","handleChange","placeholder","onClick","UpdateProfile","added_first_name","added_last_name","added_area_of_expertise","added_cause_of_interest","added_organization_name","added_organization_info","added_type_of_help_needed","added_city","added_state","is_my_form_true","event","put","catch","error","value","target","handler","added_area_cause_of_interest","HelperProfile","HelperProfileDetail","authSuccess","authFail","logout","localStorage","removeItem","checkAuthTimeout","expirationDate","dispatch","setTimeout","Login","password","onAuth","preventDefault","errorMessage","message","loading","post","Date","getTime","setItem","Signup","email","password1","password2","BaseRouter","exact","path","component","CustomNavbar","Navbar","collapseOnSelect","expand","bg","variant","fixed","Brand","Toggle","aria-controls","Collapse","Nav","Content","Layout","Footer","CustomLayout","padding","margin","children","textAlign","App","onTryAutoSignup","getItem","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","const","authStart","action","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fe14dcf.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Avatar } from 'antd';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\n\nconst IconText = ({ icon, text }) => (\n  <span>\n    {React.createElement(icon, { style: { marginRight: 8 } })}\n    {text}\n  </span>\n);\n\nfunction OrganizationProfiles(props) {\n    return (\n        <div>\n            <h3>Organizations</h3>\n            <List\n                itemLayout=\"vertical\"\n                size=\"large\"\n                pagination={{\n                onChange: page => {\n                    console.log(page);\n                },\n                pageSize: 3,\n                }}\n                dataSource={props.profiles}\n                footer={\n                <div>\n                    <b>ant design</b> footer part\n                </div>\n                }\n                renderItem={item => (\n                <List.Item\n                    key={item.username}\n                    actions={[\n                    <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\n                    <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\n                    <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\n                    ]}\n                    // extra={\n                    // <img\n                    //     width={272}\n                    //     alt=\"logo\"\n                    //     src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n                    // />\n                    // }\n                >\n                <span className=\"d-flex flex-row-reverse\">{item.city}, {item.state}</span>\n                <List.Item.Meta\n                    avatar={<Avatar src={item.avatar} />}\n                    title={<Link to={`profiles/${item.id}`}>{item.organization_name}</Link>}\n                    description={`Seeking ${item.type_of_help_needed}`}\n                />\n                {item.organization_info}\n                </List.Item>\n                )}\n            />\n        </div>\n    )\n}\n\nexport default OrganizationProfiles;","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport OrganizationProfiles from '../components/OrganizationProfiles';\n\nclass OrganizationProfileList extends React.Component {\n    constructor() {\n        super();\n        this.state = this.getInitialState();\n        this.getInitialState = this.getInitialState.bind(this);\n        this.grabFromAPI = this.grabFromAPI.bind(this);\n    }\n\n    getInitialState() {\n        return {\n            profiles: [],\n            organization_profiles: [],\n            helper_profiles: []\n        }\n    }\n\n    grabFromAPI() {\n        if (this.props.token) {\n            axios.get('http://127.0.0.1:8000/api/', {\n                headers: {\n                    Authorization: `Token ${this.props.token.token}`\n                }\n            })\n                .then(response => {\n                    this.setState({\n                        'profiles': response.data,\n                        'organization_profiles': response.data.filter(item => item.is_organization),\n                        'helper_profiles': response.data.filter(item => !item.is_organization)\n                    })\n                })\n            axios.get('http://127.0.0.1:8000/rest-auth/user/', {\n                headers: {\n                    Authorization: `Token ${this.props.token.token}`\n                }\n            })\n        } else {\n            axios.get('http://127.0.0.1:8000/api/')\n                .then(response => {\n                    this.setState({\n                        'profiles': response.data,\n                        'organization_profiles': response.data.filter(item => item.is_organization),\n                        'helper_profiles': response.data.filter(item => !item.is_organization)\n                    })\n                })\n        }\n    }\n    \n    componentDidMount() {\n        this.grabFromAPI();\n    }\n\n    componentDidUpdate() {\n        // library that will let us compare entire objects\n        let _ = require('lodash');\n\n        // this is so that profiles are reloaded when page is reloaded. we NEED _.isEqual so that this won't trigger an infinite loop\n        if (_.isEqual(this.state, this.getInitialState())) {\n            this.grabFromAPI();\n        }\n    }\n\n    render() {\n    \n        return(\n            <div>\n                <OrganizationProfiles profiles={this.state.organization_profiles} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      token: state.token,\n      isAuthenticated: state.token !== null\n    }\n  }\n  \n  export default connect(mapStateToProps)(OrganizationProfileList);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Avatar } from 'antd';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\n\nconst IconText = ({ icon, text }) => (\n  <span>\n    {React.createElement(icon, { style: { marginRight: 8 } })}\n    {text}\n  </span>\n);\n\nfunction HelperProfiles(props) {\n    return (\n        <div>\n            <h3 className=\"mb-40\">Helpers</h3>\n            <List\n                itemLayout=\"vertical\"\n                size=\"large\"\n                pagination={{\n                onChange: page => {\n                    console.log(page);\n                },\n                pageSize: 3,\n                }}\n                dataSource={props.profiles}\n                footer={\n                <div>\n                    <b>ant design</b> footer part\n                </div>\n                }\n                renderItem={item => (\n                <List.Item\n                    key={item.username}\n                    actions={[\n                    <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\n                    <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\n                    <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\n                    ]}\n                    extra={\n                    <img\n                        width={272}\n                        alt=\"logo\"\n                        src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n                    />\n                    }\n                >\n                <span className=\"d-flex flex-row-reverse\">{item.city}, {item.state}</span>\n                <List.Item.Meta\n                    avatar={<Avatar src={item.avatar} />}\n                    title={<Link to={`profiles/${item.id}`}>{item.first_name} {item.last_name}</Link>}\n                    description={`Expert in ${item.area_of_expertise}`}\n                />\n                Interested in {item.cause_of_interest}\n                </List.Item>\n                )}\n            />\n        </div>\n    )\n}\n\nexport default HelperProfiles;","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport HelperProfiles from '../components/HelperProfiles';\n\nclass HelperProfileList extends React.Component {\n    constructor() {\n        super();\n        this.state = this.getInitialState();\n        this.getInitialState = this.getInitialState.bind(this);\n        this.grabFromAPI = this.grabFromAPI.bind(this);\n    }\n\n    getInitialState() {\n        return {\n            profiles: [],\n            organization_profiles: [],\n            helper_profiles: []\n        }\n    }\n\n    grabFromAPI() {\n        if (this.props.token) {\n            axios.get('http://127.0.0.1:8000/api/', {\n                headers: {\n                    Authorization: `Token ${this.props.token.token}`\n                }\n            })\n                .then(response => {\n                    this.setState({\n                        'profiles': response.data,\n                        'organization_profiles': response.data.filter(item => item.is_organization),\n                        'helper_profiles': response.data.filter(item => !item.is_organization)\n                    })\n                })\n            axios.get('http://127.0.0.1:8000/rest-auth/user/', {\n                headers: {\n                    Authorization: `Token ${this.props.token.token}`\n                }\n            })\n        } else {\n            axios.get('http://127.0.0.1:8000/api/')\n                .then(response => {\n                    this.setState({\n                        'profiles': response.data,\n                        'organization_profiles': response.data.filter(item => item.is_organization),\n                        'helper_profiles': response.data.filter(item => !item.is_organization)\n                    })\n                })\n        }\n    }\n    \n    componentDidMount() {\n        this.grabFromAPI();\n    }\n\n    componentDidUpdate() {\n        // library that will let us compare entire objects\n        let _ = require('lodash');\n        // this is so that profiles are reloaded when page is reloaded. we NEED _.isEqual so that this won't trigger an infinite loop\n        if (_.isEqual(this.state, this.getInitialState())) {\n            this.grabFromAPI();\n        }\n    }\n\n    render() {\n    \n        return(\n            <div>\n                {/* <Profiles profiles={this.state.organization_profiles} title=\"Organizations\" />\n                <Profiles profiles={this.state.helper_profiles} title=\"Helpers\" /> */}\n                <HelperProfiles profiles={this.state.helper_profiles} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      token: state.token,\n      isAuthenticated: state.token !== null\n    }\n  }\n  \n  export default connect(mapStateToProps)(HelperProfileList);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction OrganizationProfile(props) {\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-10\">{props.profile.organization_name}</div>\n                <div>{props.profile.city}, {props.profile.state}</div>\n            </div>\n            Seeking {props.profile.type_of_help_needed} <br />\n            {props.profile.organization_info} <br />\n            {\n                props.is_my_profile ?\n                <Link to={`/update/${props.profile.id}`}>Update profile</Link>\n                :\n                null\n            }\n        </div>\n    )\n}\n\nexport default OrganizationProfile;","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport OrganizationProfile from '../components/OrganizationProfile';\n\nclass OrganizationProfileDetail extends React.Component {\n    constructor() {\n        super();\n        this.state = this.getInitialState();\n        this.grabFromAPI = this.grabFromAPI.bind(this);\n    }\n\n    getInitialState() {\n        return {\n            profile: [],\n            my_profile: [],\n            is_my_profile: false\n        }\n    }\n\n    grabFromAPI() {\n        const profileID = this.props.match.params.profileID;\n        // if we are authenticated we grab profile info, and user info\n        if (this.props.token) {\n            axios.get(`http://127.0.0.1:8000/api/${profileID}/`, {\n                headers: {\n                    Authorization: `Token ${this.props.token.token}`\n                }\n            })\n                .then(response => {\n                    this.setState({\n                        'profile': response.data\n                    })\n                })\n            axios.get('http://127.0.0.1:8000/rest-auth/user/', {\n                headers: {\n                    Authorization: `Token ${this.props.token.token}`\n                }\n            })\n                .then(response => {\n                    this.setState({\n                        'my_profile': response.data\n                    })\n                })\n        // if we are not authenticated we only grab profile info\n        } else {\n            axios.get(`http://127.0.0.1:8000/api/${profileID}/`)\n                .then(response => {\n                    this.setState({\n                        'profile': response.data\n                    })\n                })\n        }\n    }\n\n    componentDidMount() {\n        this.grabFromAPI();\n    }\n\n    componentDidUpdate(prevProps) {\n        // library that will let us compare entire objects\n        let _ = require('lodash');\n        // this is so that profiles are reloaded when page is reloaded. we NEED _.isEqual so that this won't trigger an infinite loop\n        if (this.props.token && _.isEqual(this.state, this.getInitialState())) {\n            this.grabFromAPI();\n        }\n        if (!this.state.is_my_profile && Object.keys(this.state.my_profile).length > 0) {\n            if (this.state.my_profile.pk === this.state.profile.user) {\n                console.log(this.state.my_profile, this.state.profile.user);\n                this.setState({ is_my_profile: true});\n            }\n        }\n        if (prevProps.isAuthenticated !== this.props.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <OrganizationProfile\n                    profile = {this.state.profile}\n                    is_my_profile={this.state.is_my_profile}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      token: state.token,\n      isAuthenticated: state.token !== null\n    }\n  }\n  \nexport default connect(mapStateToProps)(OrganizationProfileDetail);","import React from 'react';\n\nfunction UpdateProfileForm(props) {\n    const formContent = () => {\n        // organization form\n        if (props.my_form && props.added_is_organization) {\n            return (\n                <div>\n                    <form onSubmit={props.handleSubmit}>\n                        <input\n                            type=\"checkbox\"\n                            name=\"added_is_organization\"\n                            checked={props.added_is_organization}\n                            onChange={props.handleChange}\n                        /> Organization?\n                        <br />\n                        <input \n                            type=\"text\"\n                            name=\"added_organization_name\"\n                            placeholder=\"Name of organization\"\n                            onChange={props.handleChange}\n                        />\n                        <br />\n                        <input \n                            type=\"text\"\n                            name=\"added_organization_info\"\n                            placeholder=\"Info about organization\"\n                            onChange={props.handleChange}\n                        />\n                        <br />\n                        <input \n                            type=\"text\"\n                            name=\"added_type_of_help_needed\"\n                            placeholder=\"Type of help needed\"\n                            onChange={props.handleChange}\n                        />\n                        <br />\n                        <input \n                            type=\"text\"\n                            name=\"added_city\"\n                            placeholder=\"City\"\n                            onChange={props.handleChange}\n                        />\n                        <br />\n                        <input \n                            type=\"text\"\n                            name=\"added_state\"\n                            placeholder=\"State\"\n                            onChange={props.handleChange}\n                        />\n                        <br />\n                        <button onClick={props.handleSubmit}>Submit</button>\n                    </form>\n                </div>\n            )\n        // handler form\n        } else if (props.my_form && !props.added_is_organization) {\n            return (\n                <div>\n                    <form onSubmit={props.handleSubmit}>\n                        <input\n                            type=\"checkbox\"\n                            name=\"added_is_organization\"\n                            checked={props.added_is_organization}\n                            onChange={props.handleChange}\n                        /> Organization?\n                        <br />\n                        <input\n                            type=\"text\"\n                            name=\"added_first_name\"\n                            placeholder=\"First name\"\n                            onChange={props.handleChange} \n                        />\n                        <br />\n                        <input \n                            type=\"text\"\n                            name=\"added_last_name\"\n                            placeholder=\"Last name\"\n                            onChange={props.handleChange}\n                        />\n                        <br />\n                        <input \n                            type=\"text\"\n                            name=\"added_area_of_expertise\"\n                            placeholder=\"Area of expertise\"\n                            onChange={props.handleChange}\n                        />\n                        <br />\n                        <input \n                            type=\"text\"\n                            name=\"added_cause_of_interest\"\n                            placeholder=\"Causes of interest\"\n                            onChange={props.handleChange}\n                        />\n                        <br />\n                        <input \n                            type=\"text\"\n                            name=\"added_city\"\n                            placeholder=\"City\"\n                            onChange={props.handleChange}\n                        />\n                        <br />\n                        <input \n                            type=\"text\"\n                            name=\"added_state\"\n                            placeholder=\"State\"\n                            onChange={props.handleChange}\n                        />\n                        <br />\n                        <button onClick={props.handleSubmit}>Submit</button>\n                        {/* <input type=\"submit\" value=\"Update\" /> */}\n                    </form>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div>\n            {formContent()}\n        </div>\n    )\n}\n\nexport default UpdateProfileForm;","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport UpdateProfileForm from '../components/UpdateProfileForm';\n\nclass UpdateProfile extends React.Component {\n    constructor() {\n        super();\n        this.state = this.getInitialState();\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.grabFromAPI = this.grabFromAPI.bind(this);\n    }\n\n    getInitialState() {\n        return {\n            profile: [],\n            my_profile: [],\n            my_form: false,\n\n            added_is_organization: false,\n            added_first_name: [],\n            added_last_name: [],\n            added_area_of_expertise: [],\n            added_cause_of_interest: [],\n            added_organization_name: [],\n            added_organization_info: [],\n            added_type_of_help_needed: [],\n            added_city: [],\n            added_state: []\n        }\n    }\n\n    grabFromAPI() {\n        const profileID = this.props.match.params.profileID;\n        // if we are authenticated we grab profile info, and user info\n        if (this.props.token) {\n            axios.get(`http://127.0.0.1:8000/api/${profileID}/`, {\n                headers: {\n                    Authorization: `Token ${this.props.token.token}`\n                }\n            })\n                .then(response => {\n                    this.setState({\n                        'profile': response.data\n                    })\n                })\n            axios.get('http://127.0.0.1:8000/rest-auth/user/', {\n                headers: {\n                    Authorization: `Token ${this.props.token.token}`\n                }\n            })\n                .then(response => {\n                    this.setState({\n                        'my_profile': response.data\n                    })\n                })\n        }\n    }\n\n    componentDidMount() {\n        this.grabFromAPI();\n    }\n\n    componentDidUpdate(prevProps) {\n        // library that will let us compare entire objects\n        let _ = require('lodash');\n        // this is so that profiles are reloaded when page is reloaded. we NEED _.isEqual so that this won't trigger an infinite loop\n        if (this.props.token && _.isEqual(this.state, this.getInitialState())) {\n            this.grabFromAPI();\n        }\n        if (!this.state.my_form) {\n            if (this.state.my_profile.length !== 0) {\n                let is_my_form_true = this.state.my_profile.pk === this.state.profile.user;\n                if (is_my_form_true) {this.setState({ my_form: is_my_form_true}) }\n            }\n        }\n        if (prevProps.isAuthenticated !== this.props.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    handleSubmit(event) {\n        // event.preventDefault();\n\n        axios.put(\n            `http://127.0.0.1:8000/api/${this.state.my_profile.pk}/`,\n            {\n                is_organization: this.state.added_is_organization,\n                first_name: this.state.added_first_name.length > 0 ? this.state.added_first_name : null,\n                last_name: this.state.added_last_name.length > 0 ? this.state.added_last_name : null,\n                area_of_expertise: this.state.added_area_of_expertise.length > 0 ? this.state.added_area_of_expertise : null,\n                cause_of_interest: this.state.added_cause_of_interest.length > 0 ? this.state.added_cause_of_interest : null,\n                organization_name: this.state.added_organization_name.length > 0 ? this.state.added_organization_name : null,\n                organization_info: this.state.added_organization_info.length > 0 ? this.state.added_organization_info : null,\n                type_of_help_needed: this.state.added_type_of_help_needed.length > 0 ? this.state.added_type_of_help_needed: null,\n                city: this.state.added_city.length > 0 ? this.state.added_city : null,\n                state: this.state.added_state.length > 0 ? this.state.added_state : null,\n                user: this.state.my_profile.pk\n            },\n            {\n                headers: { 'authorization': `Token ${this.props.token.token}`}\n            }\n        )\n            .then(response => console.log(response))\n            .catch(error => console.log(error))\n        if (this.state.added_is_organization) {\n            this.props.history.push(`/profiles/${this.state.my_profile.pk}`);\n        } else {\n            this.props.history.push(`/contributors/profiles/${this.state.my_profile.pk}`);\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n\n        let value;\n        if (target.name === 'added_is_organization') {\n            value = target.checked;\n            // this.setState(this.getInitialState());\n        } else {\n            value = target.value;\n        }\n\n        // const value = target.name === 'added_is_organization' ? target.checked : target.value;\n        const name = target.name;\n    \n        this.setState({\n          [name]: value\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <UpdateProfileForm\n                    handleSubmit={this.handleSubmit}\n                    handleChange={this.handleChange}\n                    my_form={this.state.my_form}\n                    handler={this.handler}\n\n                    added_is_organization={this.state.added_is_organization}\n                    added_first_name={this.state.added_first_name}\n                    added_last_name={this.state.added_last_name}\n                    added_area_of_expertise={this.state.added_area_of_expertise}\n                    added_cause_of_interest={this.state.added_area_cause_of_interest}\n                    added_organization_name={this.state.added_organization_name}\n                    added_organization_info={this.state.added_organization_info}\n                    added_type_of_help_needed={this.state.added_type_of_help_needed}\n                    added_city={this.state.added_city}\n                    added_state={this.state.added_state}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      token: state.token,\n      isAuthenticated: state.token !== null\n    }\n  }\n  \nexport default connect(mapStateToProps)(UpdateProfile);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction HelperProfile(props) {\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-10\">{props.profile.first_name} {props.profile.last_name}</div>\n                <div>{props.profile.city}, {props.profile.state}</div>\n            </div>\n            Expert in {props.profile.area_of_expertise} <br />\n            Interested in {props.profile.cause_of_interest} <br />\n            {\n                props.is_my_profile ?\n                <Link to={`/update/${props.profile.id}`}>Update profile</Link>\n                :\n                null\n            }\n        </div>\n    )\n}\n\nexport default HelperProfile;","import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport HelperProfile from '../components/HelperProfile';\n\nclass HelperProfileDetail extends React.Component {\n    constructor() {\n        super();\n        this.state = this.getInitialState();\n        this.grabFromAPI = this.grabFromAPI.bind(this);\n    }\n\n    getInitialState() {\n        return {\n            profile: [],\n            my_profile: [],\n            is_my_profile: false\n        }\n    }\n\n    grabFromAPI() {\n        const profileID = this.props.match.params.profileID;\n        // if we are authenticated we grab profile info, and user info\n        if (this.props.token) {\n            axios.get(`http://127.0.0.1:8000/api/${profileID}/`, {\n                headers: {\n                    Authorization: `Token ${this.props.token.token}`\n                }\n            })\n                .then(response => {\n                    this.setState({\n                        'profile': response.data\n                    })\n                })\n            axios.get('http://127.0.0.1:8000/rest-auth/user/', {\n                headers: {\n                    Authorization: `Token ${this.props.token.token}`\n                }\n            })\n                .then(response => {\n                    this.setState({\n                        'my_profile': response.data\n                    })\n                })\n        // if we are not authenticated we only grab profile info\n        } else {\n            axios.get(`http://127.0.0.1:8000/api/${profileID}/`)\n                .then(response => {\n                    this.setState({\n                        'profile': response.data\n                    })\n                })\n        }\n    }\n\n    componentDidMount() {\n        this.grabFromAPI();\n    }\n\n    componentDidUpdate(prevProps) {\n        // library that will let us compare entire objects\n        let _ = require('lodash');\n        // this is so that profiles are reloaded when page is reloaded. we NEED _.isEqual so that this won't trigger an infinite loop\n        if (this.props.token && _.isEqual(this.state, this.getInitialState())) {\n            this.grabFromAPI();\n        }\n        if (!this.state.is_my_profile && Object.keys(this.state.my_profile).length > 0) {\n            if (this.state.my_profile.pk === this.state.profile.user) {\n                console.log(this.state.my_profile, this.state.profile.user);\n                this.setState({ is_my_profile: true});\n            }\n        }\n        if (prevProps.isAuthenticated !== this.props.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <HelperProfile\n                    profile={this.state.profile}\n                    is_my_profile={this.state.is_my_profile}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      token: state.token,\n      isAuthenticated: state.token !== null\n    }\n  }\n  \nexport default connect(mapStateToProps)(HelperProfileDetail);","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = expirationDate => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationDate * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            username: username,\n            password: password\n        })\n        .then(response => {\n            const token = response.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(error => {\n            dispatch(authFail(error))\n        })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(response => {\n            const token = response.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(error => {\n            dispatch(authFail(error))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport * as actions from '../store/actions/auth';\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    handleSubmit(event) {\n        const username = event.target.username.value;\n        const password = event.target.password.value;\n        this.props.onAuth(username, password);\n        event.preventDefault();\n    }\n\n    render() {\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        return (\n            <div>\n                {errorMessage}\n                {\n\n                    this.props.loading ?\n\n                    <div>LOADING</div>\n\n                    :\n\n                    <div>\n\n                        <form onSubmit={this.handleSubmit}>\n                            <input type=\"text\" name=\"username\" placeholder=\"username\" />\n                            <input type=\"password\" name=\"password\" placeholder=\"password\" />\n                            <input type=\"submit\" value=\"Login\" />\n                        </form>\n                        <Link to='/signup/'>Signup</Link>\n                    </div>\n\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error,\n        isAuthenticated: state.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../store/actions/auth';\n\nclass Signup extends Component {\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    handleSubmit(event) {\n        const username = event.target.username.value;\n        const email = event.target.email.value;\n        const password1 = event.target.password1.value;\n        const password2 = event.target.password2.value;\n        this.props.onAuth(username, email, password1, password2);\n        event.preventDefault();\n    }\n\n    render() {\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n        \n        return (\n            <div>\n\n                {errorMessage}\n\n                {\n                    \n                    this.props.loading ?\n\n                    <div>LOADING</div>\n\n                    :\n\n                    <form onSubmit={this.handleSubmit}>\n                        <input type=\"text\" name=\"username\" placeholder=\"username\" />\n                        <input type=\"text\" name=\"email\" placeholder=\"email\" />\n                        <input type=\"password\" name=\"password1\" placeholder=\"password\" />\n                        <input type=\"password\" name=\"password2\" placeholder=\"confirm password\" />\n                        <input type=\"submit\" value=\"Login\" />\n                    </form>\n                    \n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error,\n        isAuthenticated: state.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React from 'react';\nimport { Route } from 'react-router-dom';\n\n// import Home from './containers/Home';\nimport OrganizationProfileList from './containers/OrganizationProfileListView';\nimport HelperProfileList from './containers/HelperProfileListView';\nimport OrganizationProfileDetail from './containers/OrganizationProfileDetailView';\nimport UpdateProfile from './containers/UpdateProfile';\nimport HelperProfileDetail from './containers/HelperProfileDetailView';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\n\nconst BaseRouter = () => (\n    <div>\n        {/* <Route exact path='/' component={Home} /> */}\n        <Route exact path='/' component={OrganizationProfileList} />\n        <Route exact path='/contributors/' component={HelperProfileList} />\n        <Route exact path='/profiles/:profileID' component={OrganizationProfileDetail} />\n        <Route exact path='/contributors/profiles/:profileID' component={HelperProfileDetail} />\n        <Route exact path='/update/:profileID/' component={UpdateProfile} />\n        <Route exact path='/login/' component={Login} />\n        <Route exact path='/signup/' component={Signup} />\n    </div>\n);\n\nexport default BaseRouter;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nimport * as actions from '../store/actions/auth';\n\nclass CustomNavbar extends Component {\n\n    render() {\n        return (\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\n                <Navbar.Brand><Link to=\"/\" className=\"nav-item nav-link\">Home</Link></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Link to=\"/\" className=\"nav-item nav-link align-self-sm-end\">Organizations</Link>\n                        <Link to=\"/contributors/\" className=\"nav-item nav-link align-self-sm-end\">Contributors</Link>\n                    </Nav>\n                    <Nav>\n                        {\n                            this.props.isAuthenticated ?\n\n                            <button className=\"nav-item nav-link btn btn-link align-self-sm-end\" onClick={this.props.logout}>Logout</button>\n\n                            :\n\n                            <Link to=\"/login/\" className=\"nav-item nav-link align-self-sm-end\">Login</Link>\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(CustomNavbar);","import React from 'react';\nimport { Layout, Breadcrumb } from 'antd';\n\nimport CustomNavbar from '../components/CustomNavbar';\n\nconst { Content, Footer } = Layout;\n\nfunction CustomLayout(props) {\n    return (\n        <Layout className=\"layout\">\n            <CustomNavbar {...props}/>\n            <Content style={{ padding: '0 50px' }}>\n            <Breadcrumb style={{ margin: '100px 0' }}>\n            </Breadcrumb>\n            <div className=\"site-layout-content\">\n                {props.children}\n            </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n        </Layout>\n    )\n}\n\nexport default CustomLayout;","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport 'antd/dist/antd.css';\n\nimport BaseRouter from './routes';\nimport * as actions from './store/actions/auth';\nimport CustomLayout from './containers/CustomLayout';\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    const: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action,\n        error: null,\n        loading: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    })\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport reducer from './store/reducers/auth';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}